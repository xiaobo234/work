{
  "uid" : "e91536730763caf8",
  "name" : "阅读客户按钮功能",
  "fullName" : "testing.test_conent.Testcase#test_read",
  "historyId" : "8b6096039249915c206c218fbbaccb1b",
  "time" : {
    "start" : 1600395123615,
    "stop" : 1600395123694,
    "duration" : 79
  },
  "description" : "内容管理-阅读客户",
  "descriptionHtml" : "<p>内容管理-阅读客户</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '张韦' == '代表A'\n  - 代表A\n  + 张韦",
  "statusTrace" : "self = <test_conent.Testcase object at 0x00000188057317C8>\nlogin = '37e3a332-a6f5-4473-954c-34dc0def8d12'\n\n    @allure.title('阅读客户按钮功能')\n    @allure.story('阅读客户按钮')\n    def test_read(self,login):\n        '''内容管理-阅读客户'''\n        header = {\n            \"content-type\": \"application/json\",\n            \"sessionId\": login,\n        }\n        url = 'https://npro.test.100url.cn/adminapi/customer/customers?taskId=49&pageNo=1&pageSize=10&enterpriseId=&externalUserName=&externalUserMobile='\n        res = requests.get(url=url, headers=header)\n        print(res.status_code)\n        print(res.json()) #将返回的json数据转换成字典，然后打印出来\n>       assert res.json()['data']['data'][1][\"representativeName\"]=='代表A'  #从返回值种取出数据，然后用此数据进行断言\nE       AssertionError: assert '张韦' == '代表A'\nE         - 代表A\nE         + 张韦\n\ntesting\\test_conent.py:77: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1600395122992,
      "stop" : 1600395123263,
      "duration" : 271
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "内容管理-阅读客户",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '张韦' == '代表A'\n  - 代表A\n  + 张韦",
    "statusTrace" : "self = <test_conent.Testcase object at 0x00000188057317C8>\nlogin = '37e3a332-a6f5-4473-954c-34dc0def8d12'\n\n    @allure.title('阅读客户按钮功能')\n    @allure.story('阅读客户按钮')\n    def test_read(self,login):\n        '''内容管理-阅读客户'''\n        header = {\n            \"content-type\": \"application/json\",\n            \"sessionId\": login,\n        }\n        url = 'https://npro.test.100url.cn/adminapi/customer/customers?taskId=49&pageNo=1&pageSize=10&enterpriseId=&externalUserName=&externalUserMobile='\n        res = requests.get(url=url, headers=header)\n        print(res.status_code)\n        print(res.json()) #将返回的json数据转换成字典，然后打印出来\n>       assert res.json()['data']['data'][1][\"representativeName\"]=='代表A'  #从返回值种取出数据，然后用此数据进行断言\nE       AssertionError: assert '张韦' == '代表A'\nE         - 代表A\nE         + 张韦\n\ntesting\\test_conent.py:77: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e63748671b9e27d7",
      "name" : "stdout",
      "source" : "e63748671b9e27d7.txt",
      "type" : "text/plain",
      "size" : 3818
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "内容管理"
  }, {
    "name" : "story",
    "value" : "阅读客户按钮"
  }, {
    "name" : "parentSuite",
    "value" : "testing"
  }, {
    "name" : "suite",
    "value" : "test_conent"
  }, {
    "name" : "subSuite",
    "value" : "Testcase"
  }, {
    "name" : "host",
    "value" : "DESKTOP-EMV04FR"
  }, {
    "name" : "thread",
    "value" : "6744-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testing.test_conent"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "e91536730763caf8.json",
  "parameterValues" : [ ]
}