{
  "uid" : "bd72ebf9fc8c80bd",
  "name" : "转发用户按钮功能",
  "fullName" : "testing.test_conent.Testcase#test_transmit",
  "historyId" : "7678315293ecdd43d671f7241a2ad122",
  "time" : {
    "start" : 1622188965017,
    "stop" : 1622188965126,
    "duration" : 109
  },
  "description" : "内容管理-转发用户按钮功能",
  "descriptionHtml" : "<p>内容管理-转发用户按钮功能</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'sailor' == '暖阳'\n  - 暖阳\n  + sailor",
  "statusTrace" : "self = <test_conent.Testcase object at 0x0000020F30D56948>\nlogin = '9105efce-8420-4f25-a7f8-cc50fa524965'\n\n    @allure.title('转发用户按钮功能')\n    @allure.story('转发用户按钮')\n    def test_transmit(self,login):\n        '''内容管理-转发用户按钮功能'''\n        header = {\n            \"content-type\": \"application/json\",\n            \"sessionId\": login,\n        }\n        url='https://npro.test.100url.cn/adminapi/customer/customers?taskId=106&pageNo=1&pageSize=10&enterpriseId=&externalUserName=&externalUserMobile=&eventType=5'\n        res = requests.get(url=url, headers=header)\n        print(res.status_code)\n        print(res.json()) #将返回的json数据转换成字典，然后打印出来\n>       assert res.json()['data']['data'][0][\"userName\"]=='暖阳'  #从返回值种取出数据，然后用此数据进行断言\nE       AssertionError: assert 'sailor' == '暖阳'\nE         - 暖阳\nE         + sailor\n\ntesting\\test_conent.py:118: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1622188963974,
      "stop" : 1622188964080,
      "duration" : 106
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "内容管理-转发用户按钮功能",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'sailor' == '暖阳'\n  - 暖阳\n  + sailor",
    "statusTrace" : "self = <test_conent.Testcase object at 0x0000020F30D56948>\nlogin = '9105efce-8420-4f25-a7f8-cc50fa524965'\n\n    @allure.title('转发用户按钮功能')\n    @allure.story('转发用户按钮')\n    def test_transmit(self,login):\n        '''内容管理-转发用户按钮功能'''\n        header = {\n            \"content-type\": \"application/json\",\n            \"sessionId\": login,\n        }\n        url='https://npro.test.100url.cn/adminapi/customer/customers?taskId=106&pageNo=1&pageSize=10&enterpriseId=&externalUserName=&externalUserMobile=&eventType=5'\n        res = requests.get(url=url, headers=header)\n        print(res.status_code)\n        print(res.json()) #将返回的json数据转换成字典，然后打印出来\n>       assert res.json()['data']['data'][0][\"userName\"]=='暖阳'  #从返回值种取出数据，然后用此数据进行断言\nE       AssertionError: assert 'sailor' == '暖阳'\nE         - 暖阳\nE         + sailor\n\ntesting\\test_conent.py:118: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1b34a973348e98ab",
      "name" : "stdout",
      "source" : "1b34a973348e98ab.txt",
      "type" : "text/plain",
      "size" : 3004
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "转发用户按钮"
  }, {
    "name" : "feature",
    "value" : "内容管理"
  }, {
    "name" : "parentSuite",
    "value" : "testing"
  }, {
    "name" : "suite",
    "value" : "test_conent"
  }, {
    "name" : "subSuite",
    "value" : "Testcase"
  }, {
    "name" : "host",
    "value" : "DESKTOP-EMV04FR"
  }, {
    "name" : "thread",
    "value" : "11724-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testing.test_conent"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "5e53b962f8039ed2",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 'sailor' == '暖阳'\n  - 暖阳\n  + sailor",
      "time" : {
        "start" : 1622106506536,
        "stop" : 1622106506667,
        "duration" : 131
      }
    }, {
      "uid" : "9b09a0ac77e9ae07",
      "status" : "passed",
      "time" : {
        "start" : 1603108364317,
        "stop" : 1603108364384,
        "duration" : 67
      }
    }, {
      "uid" : "a4926443aba91929",
      "status" : "passed",
      "time" : {
        "start" : 1603107420087,
        "stop" : 1603107420151,
        "duration" : 64
      }
    }, {
      "uid" : "b54bb2b6d29a260f",
      "status" : "passed",
      "time" : {
        "start" : 1603107138060,
        "stop" : 1603107138125,
        "duration" : 65
      }
    }, {
      "uid" : "365ac9f96387e43c",
      "status" : "passed",
      "time" : {
        "start" : 1601295846814,
        "stop" : 1601295846877,
        "duration" : 63
      }
    }, {
      "uid" : "e17f09ec1c1f637f",
      "status" : "passed",
      "time" : {
        "start" : 1601035894031,
        "stop" : 1601035894094,
        "duration" : 63
      }
    }, {
      "uid" : "1d7e5476319da2f6",
      "status" : "passed",
      "time" : {
        "start" : 1601035764054,
        "stop" : 1601035764131,
        "duration" : 77
      }
    }, {
      "uid" : "92c0300bde10d2a5",
      "status" : "passed",
      "time" : {
        "start" : 1601035584936,
        "stop" : 1601035585001,
        "duration" : 65
      }
    }, {
      "uid" : "188cb3a695c716ad",
      "status" : "passed",
      "time" : {
        "start" : 1601035133407,
        "stop" : 1601035133482,
        "duration" : 75
      }
    }, {
      "uid" : "fad2d431853a9ad1",
      "status" : "passed",
      "time" : {
        "start" : 1600861755529,
        "stop" : 1600861755602,
        "duration" : 73
      }
    }, {
      "uid" : "983a7ae18376d966",
      "status" : "passed",
      "time" : {
        "start" : 1600691548812,
        "stop" : 1600691548880,
        "duration" : 68
      }
    }, {
      "uid" : "eede596964c6972d",
      "status" : "passed",
      "time" : {
        "start" : 1600691242653,
        "stop" : 1600691242717,
        "duration" : 64
      }
    }, {
      "uid" : "c85aae1bdcdd8a73",
      "status" : "passed",
      "time" : {
        "start" : 1600690718051,
        "stop" : 1600690718118,
        "duration" : 67
      }
    }, {
      "uid" : "2ad87fd8a01f8641",
      "status" : "passed",
      "time" : {
        "start" : 1600690397436,
        "stop" : 1600690397503,
        "duration" : 67
      }
    }, {
      "uid" : "85231439309489d9",
      "status" : "passed",
      "time" : {
        "start" : 1600690252855,
        "stop" : 1600690252920,
        "duration" : 65
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "f5fe5c74871f5f06",
        "reportUrl" : "http://192.168.3.144:8080/job/%E5%8C%BB%E8%8D%AF%E4%BB%A3%E8%A1%A8%E5%B7%A5%E4%BD%9C%E5%8F%B0%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/129/allure/#testresult/f5fe5c74871f5f06",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'sailor' == '暖阳'\n  - 暖阳\n  + sailor",
        "time" : {
          "start" : 1622106506536,
          "stop" : 1622106506667,
          "duration" : 131
        }
      }, {
        "uid" : "5d5a3f772695c444",
        "reportUrl" : "http://192.168.3.144:8080/job/%E5%8C%BB%E8%8D%AF%E4%BB%A3%E8%A1%A8%E5%B7%A5%E4%BD%9C%E5%8F%B0%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/128/allure/#testresult/5d5a3f772695c444",
        "status" : "passed",
        "time" : {
          "start" : 1603108364317,
          "stop" : 1603108364384,
          "duration" : 67
        }
      }, {
        "uid" : "943017e9dba8de1",
        "reportUrl" : "http://192.168.3.97:8080/job/%E5%8C%BB%E8%8D%AF%E4%BB%A3%E8%A1%A8%E5%B7%A5%E4%BD%9C%E5%8F%B0%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/127/allure/#testresult/943017e9dba8de1",
        "status" : "passed",
        "time" : {
          "start" : 1603107420087,
          "stop" : 1603107420151,
          "duration" : 64
        }
      }, {
        "uid" : "e20eda4ed91a5e50",
        "reportUrl" : "http://192.168.3.97:8080/job/%E5%8C%BB%E8%8D%AF%E4%BB%A3%E8%A1%A8%E5%B7%A5%E4%BD%9C%E5%8F%B0%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/126/allure/#testresult/e20eda4ed91a5e50",
        "status" : "passed",
        "time" : {
          "start" : 1603107138060,
          "stop" : 1603107138125,
          "duration" : 65
        }
      }, {
        "uid" : "b7ec0b8f5a7b126",
        "reportUrl" : "http://192.168.3.97:8080/job/%E5%8C%BB%E8%8D%AF%E4%BB%A3%E8%A1%A8%E5%B7%A5%E4%BD%9C%E5%8F%B0%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/125/allure/#testresult/b7ec0b8f5a7b126",
        "status" : "passed",
        "time" : {
          "start" : 1601295846814,
          "stop" : 1601295846877,
          "duration" : 63
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bd72ebf9fc8c80bd.json",
  "parameterValues" : [ ]
}